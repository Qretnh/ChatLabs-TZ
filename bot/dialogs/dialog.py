import datetime
import logging

from aiogram import Dispatcher
from aiogram.types import Message, CallbackQuery

from aiogram_dialog import Dialog, Window, DialogManager
from aiogram_dialog.widgets.kbd import Button, Back, Calendar, Select, CalendarConfig, SwitchTo, ScrollingGroup
from aiogram_dialog.widgets.text import Const, Format
from aiogram_dialog.widgets.input import TextInput, ManagedTextInput

from datetime import date

from FSM import TASKS

from services.api.tasks import get_tasks, create_task, delete_task
from services.api.categories import get_categories, create_category, delete_category

from environs import Env

from .getters import *
from .functions import *

env = Env()
env.read_env()

BASE_URL = env("API_BASE_URL")

DEFAULT_TIME = "18:00"

### ---------------- DIALOG -------------------


tasks_dialog = Dialog(
    Window(
        Const("–í–∞—à –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π TO-DO –ª–∏—Å—Ç\n\n"
              "<i>üìñ –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ –∑–∞–¥–∞—á–∏</i> - \n"
              "–ù–∞–∂–º–∏—Ç–µ, —á—Ç–æ–±—ã –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–æ–ª–Ω—ã–π —Å–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á\n\n"
              "<i>üìã –ó–∞–¥–∞—á–∏ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º</i> - \n"
              "–ß—Ç–æ–±—ã ‚ûï –æ—Ç–∫—Ä—ã—Ç—å –∑–∞–¥–∞—á–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ò–õ–ò —É–¥–∞–ª–∏—Ç—å/–∑–∞–≤–µ—Ä—à–∏—Ç—å‚úÖ –∑–∞–¥–∞—á—É\n\n"
              "<i>‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏–∏</i> - \n"
              "–£–¥–∞–ª–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–π\n\n"
              "<i>‚ûï –î–æ–±–∞–≤–∏—Ç—å –∑–∞–¥–∞—á—É</i> - \n"
              "–°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π –∑–∞–¥–∞—á–∏\n\n"
              "<i>üìÅ –ê—Ä—Ö–∏–≤</i> - \n"
              "–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏"),
        SwitchTo(Const("‚ûï –î–æ–±–∞–≤–∏—Ç—å –∑–∞–¥–∞—á—É"),
                 id='add_task',
                 state=TASKS.add_task),
        SwitchTo(Const("üìñ –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ –∑–∞–¥–∞—á–∏"),
                 id='open_tasks',
                 state=TASKS.my_tasks),
        SwitchTo(Const("üìã –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–¥–∞—á–∞–º–∏"),
                 id='tasks_by_category',
                 state=TASKS.tasks_by_category),
        SwitchTo(Const("‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏–∏"),
                 id='change_category',
                 state=TASKS.change_category),
        SwitchTo(Const("üìÅ –ê—Ä—Ö–∏–≤"),
                 id='archive',
                 state=TASKS.archive),
        state=TASKS.start
    ),

    # –í—ã–≤–æ–¥ —Å–ø–∏—Å–∫–∞ –∑–∞–¥–∞—á
    Window(
        Format("üìù <b>–ê–∫—Ç—É–∞–ª—å–Ω—ã–µ –∑–∞–¥–∞—á–∏</b>:\n\n{tasks_text}\n"),
        Const("–ß—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—É—é –∑–∞–¥–∞—á—É ‚Äî –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ üëá"),
        Button(Const("‚ûï –î–æ–±–∞–≤–∏—Ç—å –∑–∞–¥–∞—á—É"),
               id="add_task",
               on_click=on_add_task),
        SwitchTo(Const("üîô –ù–∞–∑–∞–¥"),
                 id='confirm_task_',
                 state=TASKS.start),
        state=TASKS.my_tasks,
        getter=getter_tasks_data
    ),

    # –í–≤–æ–¥ –Ω–∞–∑–≤–∞–Ω–∏—è
    Window(
        Const("‚úçÔ∏è <b>–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –Ω–æ–≤–æ–π –∑–∞–¥–∞—á–∏</b>:\n\n"
              "–ù–∞–ø—Ä–∏–º–µ—Ä: \"–°—Ö–æ–¥–∏—Ç—å –≤ —Å–ø–æ—Ä—Ç–∑–∞–ª\" –∏–ª–∏ \"–ó–∞–∫–æ–Ω—á–∏—Ç—å –æ—Ç—á—ë—Ç\" üóí"),
        TextInput(id='input_title',
                  type_factory=lambda text: text,
                  on_success=save_title),
        Back(Const("üîô –ù–∞–∑–∞–¥")),
        state=TASKS.add_task
    ),

    # –í—ã–±–æ—Ä –¥–∞—Ç—ã –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
    Window(
        Const("üìÖ –í—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—É –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–¥–∞—á–∏ (–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –ø–æ–¥—Ö–æ–¥—è—â—É—é –¥–∞—Ç—É –≤ –∫–∞–ª–µ–Ω–¥–∞—Ä–µ):"),
        Calendar(id="calendar",
                 config=CalendarConfig(min_date=datetime.date.today()),
                 on_click=on_date_selected),
        Back(Const("üîô –ù–∞–∑–∞–¥")),
        state=TASKS.pick_date
    ),

    # –í—ã–±–æ—Ä –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è
    Window(
        Const("üóÇ –í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –∏–∑ —Å–ø–∏—Å–∫–∞, –ª–∏–±–æ –≤–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –Ω–æ–≤–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ (–æ–Ω–∞ —Å–æ–∑–¥–∞—Å—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏):"),
        Select(
            Format("{item[name]}"),
            items="categories",
            item_id_getter=lambda c: str(c["id"]),
            id="category_select",
            on_click=on_category_chosen
        ),
        TextInput(
            id="new_category_input",
            type_factory=lambda text: text,
            on_success=on_create_category
        ),
        Back(Const("üîô –ù–∞–∑–∞–¥")),
        state=TASKS.pick_category,
        getter=getter_categories
    ),

    # –í–≤–æ–¥ –æ–ø–∏—Å–∞–Ω–∏—è –∑–∞–¥–∞—á–∏
    Window(
        Const("‚úçÔ∏è –í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏ –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É '–ë–µ–∑ –æ–ø–∏—Å–∞–Ω–∏—è', –µ—Å–ª–∏ –æ–Ω–æ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è"),
        TextInput(
            id='input_description',
            type_factory=lambda text: text,
            on_success=on_description_updated
        ),
        Button(Const("–ë–µ–∑ –æ–ø–∏—Å–∞–Ω–∏—è"),
               id="no_desc",
               on_click=on_no_description),
        Back(Const("üîô –ù–∞–∑–∞–¥")),
        state=TASKS.input_description
    ),

    # –í–≤–æ–¥ –≤—Ä–µ–º–µ–Ω–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–¥–∞—á–∏ (–î–µ—Ñ–æ–ª—Ç 18:00)
    Window(
        Const("‚è∞ –í–≤–µ–¥–∏—Ç–µ –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–¥–∞—á–∏ –≤ —Ñ–æ—Ä–º–∞—Ç–µ HH:MM (–ø—Ä–∏–º–µ—Ä - 09:30)\n\n"
              "–ò–ª–∏ –Ω–∞–∂–º–∏—Ç–µ '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å' ‚Äî –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –∑–∞–¥–∞—á–∞ –±—É–¥–µ—Ç –Ω–∞ 18:00"),
        TextInput(
            id='input_time',
            type_factory=lambda text: text,
            on_success=on_time_entered
        ),
        Button(Const("–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å"),
               id="skip_time",
               on_click=on_skip_time),
        Back(Const("üîô –ù–∞–∑–∞–¥")),
        state=TASKS.input_time
    ),

    # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ç–∞—Å–∫–∏
    Window(
        Format("‚úÖ <b>–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∑–∞–¥–∞—á–∏</b>:\n\n"
               "üóÇ <b>–ó–∞–¥–∞—á–∞:</b> {title}\n"
               "üìÖ <b>–í—ã–ø–æ–ª–Ω–∏—Ç—å –¥–æ:</b> {due_date} {due_time}\n"
               "üìù <b>–û–ø–∏—Å–∞–Ω–∏–µ:</b> {description}\n\n"
               "–ï—Å–ª–∏ –≤—Å—ë –≤–µ—Ä–Ω–æ ‚Äî –∂–º–∏—Ç–µ ‚úÖ"),
        Button(Format("‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å"),
               id="confirm",
               on_click=on_confirm),
        Back(Const("üîô –ù–∞–∑–∞–¥")),
        getter=getter_confirm_task,
        state=TASKS.confirm_task
    ),

    # –í—ã–±–æ—Ä –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø—Ä–∏ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ –∑–∞–¥–∞—á –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
    Window(
        Const("üìÇ –í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∑–∞–¥–∞—á\n\n"
              "(–û—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏, –≤ –∫–æ—Ç–æ—Ä—ã—Ö –µ—Å—Ç—å –∑–∞–¥–∞—á–∏)"),
        ScrollingGroup(
            Select(
                Format("{item}"),
                items="grouped_tasks",
                item_id_getter=lambda item: item,
                id="category_choice",
                on_click=on_category_select_for_tasks
            ),
            id="categories_scroll",
            width=1,
            height=5
        ),
        SwitchTo(Const("üîô –ù–∞–∑–∞–¥"),
                 id="back_from_manage_categories",
                 state=TASKS.start),
        getter=getter_tasks_by_category,
        state=TASKS.tasks_by_category
    ),

    # –û–∫–Ω–æ –∑–∞–¥–∞—á –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    Window(
        Format("üìÇ <b>–ó–∞–¥–∞—á–∏ –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ {category}</b>\n\n"),
        ScrollingGroup(
            Select(
                Format("{item[title]}"),
                items="TODO",
                item_id_getter=lambda task: task['id'],
                id="task_in_category",
                on_click=view_task_detail
            ),
            id="task_scroll",
            width=1,
            height=5
        ),
        Back(Const("üîô –ù–∞–∑–∞–¥")),
        getter=getter_selected_category_tasks,
        state=TASKS.task_list_by_category
    ),

    # –û–∫–Ω–æ —Ç–∞—Å–∫–∏
    Window(
        Format("üìå <b>{task[title]}</b>\n\n"
               "–ö–∞—Ç–µ–≥–æ—Ä–∏—è: <b>{task[category][name]}</b>\n\n"
               "–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è: <b>{created_at} </b>\n"
               "–î–∞—Ç–∞ –∏—Å–ø–æ–ª–Ω–µ–Ω–∏—è: <b>{due_date} {task[due_time]}</b>\n"
               "–û–ø–∏—Å–∞–Ω–∏–µ: {task[description]}"),
        Button(Const("‚úÖ –ó–∞–≤–µ—Ä—à–∏—Ç—å –∑–∞–¥–∞—á—É"),
               id='complete',
               on_click=complete_task_handler),
        Button(Const("üóë –£–¥–∞–ª–∏—Ç—å –∑–∞–¥–∞—á—É"),
               id="delete_task",
               on_click=delete_task_handler),
        SwitchTo(Const("‚úçÔ∏è –û–±–Ω–æ–≤–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ"),
                 id='update_description',
                 state=TASKS.update_task_description),
        Back(Const("üîô –ù–∞–∑–∞–¥")),
        getter=getter_task,
        state=TASKS.task_detail
    ),

    # –û–∫–Ω–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
    Window(
        Const("üóÇ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏. \n\n–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏, –µ—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –µ—ë —É–¥–∞–ª–∏—Ç—å\n\n"
              "–î–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–π - –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–Ω–æ–ø–∫–æ–π –Ω–∏–∂–µ"),
        ScrollingGroup(
            Select(
                Format("‚ùå {item[name]}"),
                items="categories",
                item_id_getter=lambda cat: cat["id"],
                id="category_delete",
                on_click=delete_category_handler
            ),
            id="manage_scroll",
            width=1,
            height=5
        ),
        SwitchTo(Const("‚úçÔ∏è –î–æ–±–∞–≤–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é"),
                 id="add_new_category",
                 state=TASKS.add_new_category),
        SwitchTo(Const("üîô –ù–∞–∑–∞–¥"),
                 id="back_from_manage_categories",
                 state=TASKS.start),
        getter=getter_manage_categories,
        state=TASKS.change_category
    ),

    # –í–≤–æ–¥ –Ω–∞–∑–≤–∞–Ω–∏—è –Ω–æ–≤–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    Window(
        Const("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –Ω–æ–≤–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏"),
        TextInput(
            id="new_category_input",
            type_factory=lambda text: text,
            on_success=on_create_category_from_categories
        ),
        Back(Const("üîô –ù–∞–∑–∞–¥")),
        state=TASKS.add_new_category
    ),

    # –í–≤–æ–¥ –Ω–æ–≤–æ–≥–æ –æ–ø–∏—Å–∞–Ω–∏—è –∑–∞–¥–∞—á–∏
    Window(
        Const("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏"),
        TextInput(
            id='input_description',
            type_factory=lambda text: text,
            on_success=on_description_entered
        ),
        state=TASKS.update_task_description
    ),

    # –ê—Ä—Ö–∏–≤ - –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ —Ç–∞—Å–∫–∏
    Window(
        Const("–í—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏"),
        ScrollingGroup(
            Select(
                Format("‚úÖ {item[title]}"),
                items="tasks",
                item_id_getter=lambda task: task['id'],
                id="task_in_category",
                on_click=view_task_archive
            ),
            id="task_scroll",
            width=1,
            height=5
        ),
        SwitchTo(Const("üîô –ù–∞–∑–∞–¥"),
                 id='back_from_archive',
                 state=TASKS.start),
        getter=getter_archive,
        state=TASKS.archive
    ),

    # –û–∫–Ω–æ –∞—Ä—Ö–∏–≤–Ω–æ–π —Ç–∞—Å–∫–∏
    Window(
        Format("üìå <b>{task[title]}</b>\n\n"
               "–ö–∞—Ç–µ–≥–æ—Ä–∏—è: <b>{task[category][name]}</b>\n\n"
               "–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è: <b>{created_at} </b>\n"
               "–î–∞—Ç–∞ –∏—Å–ø–æ–ª–Ω–µ–Ω–∏—è: <b>{due_date} {task[due_time]}</b>\n"
               "–û–ø–∏—Å–∞–Ω–∏–µ: {task[description]}\n\n"
               "‚úÖ –í—ã–ø–æ–ª–Ω–µ–Ω–æ!"),
        Button(Const("üóë –£–¥–∞–ª–∏—Ç—å –∑–∞–¥–∞—á—É"),
               id="delete_task",
               on_click=delete_task_handler),
        Back(Const("üîô –ù–∞–∑–∞–¥")),
        getter=getter_task,
        state=TASKS.archive_task_detail
    ),

)
